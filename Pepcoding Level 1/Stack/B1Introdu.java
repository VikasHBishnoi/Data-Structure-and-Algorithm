package com.company.PepCoding.Stack;

import java.sql.Array;
import java.util.Scanner;
import java.util.Stack;

public class B1Introdu {
//    public static void check(char c,Stack<Character> st){
//        if (st.size()==0){
//            System.out.println("Last me zayada Bracket hai");
//            return;
//        }
//        else if (st.peek() != c) {
//            System.out.println("Not agal bagal same");
//            return;
//        }
//        else {
//            st.pop();
//        }
//
//
//    }
    public static void main(String[] args) {

//        // Balanced Bracket
//        Stack<Character> st=new Stack<>();
//        Scanner sc=new Scanner(System.in);
//        String str="(({}))";
//
//        for (int i=0;i<str.length();i++){
//            char character=str.charAt(i);
//            if (character=='('||character=='{'||character=='['){
//                st.push(character);
//            }
//            else if (character==')'){
//                char checkVariable='(';
//                check(checkVariable,st);
//            }
//            else if (character=='}'){
//                char checkVariable='{';
//                check(checkVariable,st);
//            }
//            else if (character==']'){
//                char checkVariable='[';
//                check(checkVariable,st);
//            }
//        }
//
//        if (st.size()==0){
//            System.out.println("Balanced");
//        }
//        else {
//            System.out.println("Starting me zada");
//        }


        // Bruteforce for Next GreaterNo. to Right
//        int[] arr={20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4 , 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4, 20,19,18,17,16,15,14,13,12,11,10,9,9,8,8,8,7,5,4,5,4,8,7,2,6,2,6,3,7,5,7,4,7,3,7,9,6,56,4};

        int [] arr=new int[100000];
        int k=1000000;
        for (int i=0;i<arr.length-1;i++){
            arr[i]=k;
            k--;
        }
        arr[arr.length-1]=1000000000;
        System.out.println(arr.length);
        
        int[] greaterarr=new int[arr.length];
        int rightgreateris;
        int count =0;
        for (int i=0;i<arr.length;i++){
            int greatfor=arr[i];
            for (int j=i;j<arr.length;j++){
                count++;
                if (arr[i]<arr[j]){
                    rightgreateris=arr[j];

                    System.out.println("The Next GreaterFor "+greatfor+" is "+rightgreateris);
                    break;
                }
                if (j==arr.length-1){
                    System.out.println("The Next GreaterFor "+greatfor+" is -1");
                }
            }
        }
        System.out.println("Count is"+count);
        System.out.println(arr.length);
        System.out.println(count/arr.length);



    }
}
